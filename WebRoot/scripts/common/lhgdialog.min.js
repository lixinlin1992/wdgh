/*!
 * lhgcore Dialog Plugin v3.3.1
 * Date : 2011-04-12 11:16:11
 * Copyright (c) 2009 - 2011 By Li Hui Gang
 */

;
(function(J) {

    var top = window, doc, cover, ZIndex, installed = false,
            ie6 = (J.browser.msie && J.browser.version < 7) ? true : false,

            iframeTpl = ie6 ? '<iframe hideFocus="true" ' +
                    'frameborder="0" src="about:blank" style="position:absolute;' +
                    'z-index:-1;width:100%;height:100%;top:0px;left:0px;filter:' +
                    'progid:DXImageTransform.Microsoft.Alpha(opacity=0)"><\/iframe>' : '',

            compat = function(doc) {
                d = doc || document;
                return d.compatMode == 'CSS1Compat' ? d.documentElement : d.body;
            },

            getZIndex = function() {
                if (!ZIndex) ZIndex = 9999;

                return ++ZIndex;
            },

            getEvent = function(w) {
                if (J.browser.msie) {
                    try {
                        return window.event || top.event || w.event;
                    } catch(e) {
                        return null;
                    }
                }

                var func = getEvent.caller;

                while (func != null) {
                    var arg = func.arguments[0];
                    if (arg && (arg + '').indexOf('Event') >= 0) return arg;
                    func = func.caller;
                }

                return null;
            },

            getScrSize = function() {
                if ('pageXOffset' in top) {
                    return {
                        x: top.pageXOffset || 0,
                        y: top.pageYOffset || 0
                    };
                }
                else {
                    var d = compat(doc);
                    return {
                        x: d.scrollLeft || 0,
                        y: d.scrollTop || 0
                    };
                }
            },

            getDocSize = function() {
                var d = compat(doc);

                return {
                    w: d.clientWidth || 0,
                    h: d.clientHeight || 0
                };
            },

            reSizeHdl = function() {
                var rel = compat(doc);

                J(cover).css({
                            width: Math.max(rel.scrollWidth, rel.clientWidth || 0) - 1 + 'px',
                            height: Math.max(rel.scrollHeight, rel.clientHeight || 0) - 1 + 'px'
                        });
            },

            getAbsoultePath = function() {
                var sc = J('script'), bp = '', i = 0, l = sc.length, re = /lhgdialog(?:\.min)?\.js/i;

                for (; i < l; i++) {
                    if (re.test(sc[i].src)) {
                        bp = !!document.querySelector ?
                                sc[i].src : sc[i].getAttribute('src', 4);
                        break;
                    }
                }

                return bp.substr(0, bp.lastIndexOf('/') + 1);
            };

    while (top.parent && top.parent != top) {
        try {
            if (top.parent.document.domain != document.domain) break;
        } catch(e) {
            break;
        }

        top = top.parent;
    }

    if (top.document.getElementsByTagName('frameset').length > 0)
        top = window;

    doc = top.document;

    J.fn.fixie6png = function() {
        var els = J('*', this), iebg, bgIMG;

        for (var i = 0, l = els.length; i < l; i++) {
            bgIMG = J(els[i]).css('backgroundImage');

            if (bgIMG.indexOf('.png') !== -1) {
                iebg = bgIMG.replace(/url\(|"|\)/g, '');
                els[i].style.backgroundImage = 'none';
                els[i].runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + iebg +
                        "',sizingMethod='scale')";
            }
        }
    };

    J.fn._dialog = function(opts) {
        var dialog = false;

        if (this[0])
            dialog = new J._dialog(opts, this[0]);

        return dialog;
    };

    J._dialog = function(opts, elem) {
        var S = this, loadObj, inboxObj, xbtnObj, dragObj, dropObj, btnBarObj,
                bodyObj, regWindow,

                opt = S.opt = J.extend({
                            title: 'lhgdialog \u5F39\u51FA\u7A97\u53E3',
                            cover: false,
                            titleBar: true,
                            btnBar: true,
                            xButton: true,
                            cancelBtn: true,
                            width: 400,
                            height: 300,
                            id: 'lhgdgId',
                            SetTopWindow: null,
                            link: false,
                            html: null,
                            ele:null,
                            page: null,
                            parent: null,
                            dgOnLoad: null,
                            onXclick: null,
                            onCancel: null,
                            fixed: false,
                            top: 'center',
                            left: 'center',
                            drag: true,
                            resize: true,
                            autoSize: false,
                            rang: false,
                            iconTitle: true,
                            loadingText: '\u7A97\u53E3\u5185\u5BB9\u52A0\u8F7D\u4E2D\uFF0C\u8BF7\u7A0D\u7B49...'
                        }, opts || {});

        if (opt.SetTopWindow) {
            top = opt.SetTopWindow;
            doc = top.document;
        }

        if (!installed) {
            try {
                doc.execCommand('BackgroundImageCache', false, true);
            } catch(e) {
            }

            if (ie6 && J('body', doc).css('backgroundAttachment') !== 'fixed') {
                J('html', doc).css({
                            backgroundImage: 'url(about:blank)',
                            backgroundAttachment: 'fixed'
                        });
            }
            /*
            J('head', doc).append('<link href="' + getAbsoultePath() +
                    'lhgdialog.css" rel="stylesheet" type="text/css"/>');
                    */

            installed = true;
        }

        var SetFixed = function(elem) {
            var style = elem.style,
                    dd = compat(doc),
                    left = parseInt(style.left) - dd.scrollLeft,
                    top = parseInt(style.top) - dd.scrollTop;

            style.removeExpression('left');
            style.removeExpression('top');

            style.setExpression('left', 'this.ownerDocument.documentElement.scrollLeft' + left);
            style.setExpression('top', 'this.ownerDocument.documentElement.scrollTop + ' + top);
        },

                SetIFramePage = function() {
                    var innerDoc, dialogTpl;

                    if (opt.html) {
                        if (typeof opt.html === 'string')
                            innerDoc = '<div id="lhgdg_inbox_' + opt.id +
                                    '" class="lhgdg_inbox" style="display:none">' + opt.html + '</div>';
                        else
                            innerDoc = '<div id="lhgdg_inbox_' + opt.id +
                                    '" class="lhgdg_inbox" style="display:none"></div>';
                    }
                    else if (opt.ele) {
                        //传入的是一个元素，将这个元素套进去
                        innerDoc = '<div id="lhgdg_inbox_' + opt.id +
                                '" class="lhgdg_inbox" style="display:none"></div>';
                    }
                    else if (opt.page) {
                        innerDoc = '<iframe id="lhgfrm_' + opt.id + '" frameborder="0" src="' + opt.page + '" ' +
                                'scrolling="auto" style="display:none;width:100%;height:100%;"><\/iframe>';
                    }

                    dialogTpl = [
                        '<div id="_dlg_', opt.id, '" class="lhgdialog" style="width:', opt.width, 'px;height:',
                        opt.height,
                        'px;">',
                        '<table border="0" cellspacing="0" cellpadding="0" width="100%">',
                        '<tr>',
                        '<td class="lhgdg_leftTop"></td>',
                        '<td id="lhgdg_drag_', opt.id, '" class="lhgdg_top">', opt.titleBar ?
                                ('<div class="lhgdg_title_icon">' +
                                        (opt.iconTitle ? '<div class="lhgdg_icon"></div>' : '') +
                                        '<div class="lhgdg_title">' + opt.title + '</div>' +
                                        (opt.xButton ? ('<a class="lhgdg_xbtn" id="lhgdg_xbtn_' + opt.id +
                                                '" href="javascript://nop;"></a>') : '') + '</div>') : '',
                        '</td>',
                        '<td class="lhgdg_rightTop"></td>',
                        '</tr>',
                        '<tr>',
                        '<td class="lhgdg_left"></td>',
                        '<td>',
                        '<table border="0" cellspacing="0" cellpadding="0" width="100%">',
                        '<tr>',
                        '<td id="lhgdg_content_', opt.id, '" style="background-color:#fff;position:relative;">',
                        innerDoc, '<div id="lhgdg_load_', opt.id, '" class="lhgdg_load"><span>', opt.loadingText,
                        '</span></div>',
                        '</td>',
                        '</tr>',
                        opt.btnBar ? ('<tr><td id="lhgdg_btnBar_' + opt.id + '" class="lhgdg_btnBar"></td></tr>') : '',
                        '</table>',
                        '</td>',
                        '<td class="lhgdg_right"></td>',
                        '</tr>',
                        '<tr>',
                        '<td class="lhgdg_leftBottom"></td>',
                        '<td class="lhgdg_bottom"></td>',
                        '<td id="lhgdg_drop_', opt.id, '" class="lhgdg_rightBottom"></td>',
                        '</tr>',
                        '</table>', iframeTpl,
                        '</div>'
                    ].join('');

                    return dialogTpl;
                },

                ShowCover = function() {
                    //kinz 2011-09-30 调整了所有对话框使用同一个遮罩层的问题
                    cover = J('#lhgdgCover_'+opt.id, doc)[0];

                    if (!cover) {
                        var html = '<div id="lhgdgCover_'+opt.id+'" style="position:absolute;top:0px;left:0px;' +
                                'background-color:#fff;">' + iframeTpl + '</div>';

                        cover = J(html, doc).css('opacity', 0.5).appendTo(doc.body)[0];
                    }

                    J(top).bind('resize', reSizeHdl);
                    reSizeHdl();
                    J(cover).css({ display: '', zIndex: getZIndex() });
                },

                iPos = function(dg, tp, lt, fix) {
                    var cS = getDocSize(),
                            sS = getScrSize(),
                            dW = dg.offsetWidth,
                            dH = dg.offsetHeight, x, y,
                            lx, rx, cx, ty, by, cy;

                    if (fix) {
                        lx = ie6 ? sS.x : 0;
                        rx = ie6 ? cS.w + sS.x - dW : cS.w - dW;
                        cx = ie6 ? ( rx + sS.x - 20 ) / 2 : ( rx - 20 ) / 2;

                        ty = ie6 ? sS.y : 0;
                        by = ie6 ? cS.h + sS.y - dH : cS.h - dH;
                        cy = ie6 ? ( by + sS.y - 20 ) / 2 : ( by - 20 ) / 2;
                    }
                    else {
                        lx = sS.x;
                        cx = sS.x + ( cS.w - dW - 20 ) / 2;
                        rx = sS.x + cS.w - dW;

                        ty = sS.y;
                        cy = sS.y + ( cS.h - dH - 20 ) / 2;
                        by = sS.y + cS.h - dH;
                    }

                    switch (lt) {
                        case 'center':
                            x = cx;
                            break;
                        case 'left':
                            x = lx;
                            break;
                        case 'right':
                            x = rx;
                            break;
                        default:
                            if (fix && ie6) lt = lt + sS.x;
                            x = lt;
                            break;
                    }

                    switch (tp) {
                        case 'center':
                            y = cy;
                            break;
                        case 'top':
                            y = ty;
                            break;
                        case 'bottom':
                            y = by;
                            break;
                        default:
                            if (fix && ie6) tp = tp + sS.y;
                            y = tp;
                            break;
                    }

                    if (y <= 0)
                        y = 1;
                    if (x <= 0)
                        x = 1;
                    J(dg).css({ top: y + 'px', left: x + 'px' });

                    if (fix && ie6) SetFixed(dg);
                },

                SetDialog = function(dg) {
                    S.topWin = top;
                    S.topDoc = doc;

                    S.curWin = window;
                    S.curDoc = document;

                    J(dg).bind('contextmenu',
                            function(ev) {
                                //ev.preventDefault(); 2011-10-20 李嘉伟 解决右键菜单问题
                            }).bind('mousedown', S.SetIndex);

                    if (opt.ele) {
                        $(opt.ele).detach();
                        J(inboxObj).append(opt.ele);
                        $(opt.ele).css({display:""});
                        //opt.ele = $("#"+opt.id)[0];
                        //$(opt.ele).css({display:""});
                    } else if (opt.html && opt.html.nodeType)
                        J(inboxObj).append(opt.html);

                    regWindow = [window];

                    if (top != window)
                        regWindow.push(top);

                    if (opt.page) {
                        S.dgFrm = J('#lhgfrm_' + opt.id, doc)[0];

                        if (!opt.link) {
                            S.dgWin = S.dgFrm.contentWindow;
                            S.dgFrm.lhgDG = S;
                        }

                        J(S.dgFrm).bind('load', function() {
                            this.style.display = 'block';

                            if (!opt.link) {
                                var indw = J.browser.msie ?
                                        S.dgWin.document : S.dgWin;

                                J(indw).bind('mousedown', S.SetIndex);

                                regWindow.push(S.dgWin);
                                S.dgDoc = S.dgWin.document;

                                if (opt.autoSize) autoSize();
                                J.isFunction(opt.dgOnLoad) && opt.dgOnLoad.call(S);
                            }

                            loadObj.style.display = 'none';
                        });
                    }

                    if (opt.xButton && opt.titleBar) {
                        J(xbtnObj).hover(
                                function() {
                                    J(this).addClass('lhgdg_xbtnover');
                                },
                                function() {
                                    J(this).removeClass('lhgdg_xbtnover');
                                }).bind('click', opt.onXclick);
                    }
                },

                reContentSize = function(dg) {
                    try {
                        var tH = dragObj.offsetHeight,
                                bH = dropObj.offsetHeight,
                                nH = opt.btnBar ? btnBarObj.offsetHeight : 0,
                                iH = parseInt(dg.style.height, 10) - tH - bH - nH;

                        loadObj.style.lineHeight = iH + 'px';
                        bodyObj.style.height = iH + 'px';
                    } catch(e) {
                    }
                },

                autoSize = function() {
                    var tH = dragObj.offsetHeight,
                            bH = dropObj.offsetHeight,
                            nH = opt.btnBar ? btnBarObj.offsetHeight : 0,
                            bW = dropObj.offsetWidth * 2, sH, sW, comDoc;

                    if (opt.html) {
                        sH = Math.max(inboxObj.scrollHeight, inboxObj.clientHeight || 0);
                        sW = Math.max(inboxObj.scrollWidth, inboxObj.clientWidth || 0);
                    }
                    else if (opt.page && !opt.link) {
                        if (!S.dgDoc) return;
                        comDoc = compat(S.dgDoc);

                        sH = Math.max(comDoc.scrollHeight, comDoc.clientHeight || 0);
                        sW = Math.max(comDoc.scrollWidth, comDoc.clientWidth || 0);
                    }

                    sH = sH + tH + bH + nH;
                    sW = sW + bW;

                    S.reDialogSize(sW, sH);
                },

                initDrag = function(elem) {
                    var lacoor, maxX, maxY, curpos, regw = regWindow, cS, sS;

                    function moveHandler(ev) {
                        var curcoor = { x: ev.screenX, y: ev.screenY };
                        curpos =
                        {
                            x: curpos.x + ( curcoor.x - lacoor.x ),
                            y: curpos.y + ( curcoor.y - lacoor.y )
                        };
                        lacoor = curcoor;

                        if (opt.rang) {
                            if (curpos.x < sS.x) curpos.x = sS.x;
                            if (curpos.y < sS.y) curpos.y = sS.y;
                            if (curpos.x > maxX) curpos.x = maxX;
                            if (curpos.y > maxY) curpos.y = maxY;
                        }
                        /*
                         if(curpos.x<=0)
                         return;
                         if(curpos.y<=0)
                         return;
                         */

                        S.dg.style.top = opt.fixed && !ie6 ? curpos.y - sS.y + 'px' : curpos.y + 'px';
                        S.dg.style.left = opt.fixed && !ie6 ? curpos.x - sS.x + 'px' : curpos.x + 'px';

                        if (S.dg.offsetTop < 0)
                            S.dg.style.top = opt.fixed && !ie6 ? 0 - sS.y + 'px' : 0 + 'px';
                        if (S.dg.offsetLeft < 0)
                            S.dg.style.left = opt.fixed && !ie6 ? 0 - sS.x + 'px' : 0 + 'px';
                    }

                    ;

                    function upHandler(ev) {
                        for (var i = 0, l = regw.length; i < l; i++) {
                            J(regw[i].document).unbind('mousemove', moveHandler);
                            J(regw[i].document).unbind('mouseup', upHandler);
                        }

                        lacoor = null;
                        elem = null;

                        if (opt.fixed && ie6) SetFixed(S.dg);
                        if (J.browser.msie) S.dg.releaseCapture();
                    }

                    ;

                    J(elem).bind('mousedown', function(ev) {
                        if (ev.target.id === 'lhgdg_xbtn_' + S.opt.id) return;

                        cS = getDocSize();
                        sS = getScrSize();

                        var lt = S.dg.offsetLeft,
                                tp = S.dg.offsetTop,
                                dW = S.dg.clientWidth,
                                dH = S.dg.clientHeight;

                        curpos = opt.fixed && !ie6 ?
                        { x: lt + sS.x, y: tp + sS.y } : { x: lt, y: tp };

                        lacoor = { x: ev.screenX, y: ev.screenY };

                        maxX = cS.w + sS.x - dW;
                        maxY = cS.h + sS.y - dH;

                        S.dg.style.zIndex = parseInt(ZIndex, 10) + 1;

                        for (var i = 0, l = regw.length; i < l; i++) {
                            J(regw[i].document).bind('mousemove', moveHandler);
                            J(regw[i].document).bind('mouseup', upHandler);
                        }

                        ev.preventDefault();

                        if (J.browser.msie) S.dg.setCapture();
                    });
                },

                initSize = function(elem) {
                    var lacoor, dH, dW, curpos, regw = regWindow, dialog, cS, sS;

                    function moveHandler(ev) {
                        var curcoor = { x : ev.screenX, y : ev.screenY };
                        dialog = {
                            w: curcoor.x - lacoor.x,
                            h: curcoor.y - lacoor.y
                        };

                        if (dialog.w < 200) dialog.w = 200;
                        if (dialog.h < 100) dialog.h = 100;

                        S.dg.style.top = opt.fixed ? curpos.y - sS.y + 'px' : curpos.y + 'px';
                        S.dg.style.left = opt.fixed ? curpos.x - sS.x + 'px' : curpos.x + 'px';

                        S.reDialogSize(dialog.w, dialog.h);
                    }

                    ;

                    function upHandler(ev) {
                        for (var i = 0, l = regw.length; i < l; i++) {
                            J(regw[i].document).unbind('mousemove', moveHandler);
                            J(regw[i].document).unbind('mouseup', upHandler);
                        }

                        lacoor = null;
                        elem = null;

                        if (J.browser.msie) S.dg.releaseCapture();
                    }

                    ;

                    J(elem).bind('mousedown', function(ev) {
                        dW = S.dg.clientWidth;
                        dH = S.dg.clientHeight;

                        dialog = { w: dW, h: dH };

                        cS = getDocSize();
                        sS = getScrSize();

                        var lt = S.dg.offsetLeft,
                                tp = S.dg.offsetTop;

                        curpos = opt.fixed ?
                        { x: lt + sS.x, y: tp + sS.y } : { x: lt, y: tp };

                        lacoor = { x: ev.screenX - dW, y: ev.screenY - dH };

                        S.dg.style.zIndex = parseInt(ZIndex, 10) + 1;

                        for (var i = 0, l = regw.length; i < l; i++) {
                            J(regw[i].document).bind('mousemove', moveHandler);
                            J(regw[i].document).bind('mouseup', upHandler);
                        }

                        ev.preventDefault();

                        if (J.browser.msie) S.dg.setCapture();
                    });
                },

                removeDG = function() {
                    if (S.dgFrm) {
                        if (!opt.link)
                            J(S.dgFrm).unbind('load');

                        S.dgFrm.src = 'about:blank';
                        S.dgFrm = null;
                    }

                    regWindow = [];
                    //J(S.dg).remove();
                    J(S.dg).css({display:"none"})

                    //S.dg = null;
                    //loadObj = inboxObj = xbtnObj = dragObj = dropObj = btnBarObj = bodyObj = null;
                };

        S.SetTitle = function(title) {
            //修改标题
            opt["title"] = title;
            $("#lhgdg_drag_" + opt.id + " .lhgdg_title").html(opt["title"]);
        };
        S.ShowDialog = function() {

            if (opt.cover)
                ShowCover();

            if (J('#_dlg_' + opt.id, doc)[0]) {
                $('#_dlg_' + opt.id).css({display:"",zIndex: getZIndex()});
                return S;
            }

            var fixpos = opt.fixed && !ie6 ? 'fixed' : 'absolute',
                    html = SetIFramePage();

            S.dg = J(html, doc).css({
                        position: fixpos, zIndex: getZIndex()
                    }).appendTo(doc.body)[0];

            loadObj = J('#lhgdg_load_' + opt.id, doc)[0];
            inboxObj = J('#lhgdg_inbox_' + opt.id, doc)[0];
            xbtnObj = J('#lhgdg_xbtn_' + opt.id, doc)[0];
            dragObj = J('#lhgdg_drag_' + opt.id, doc)[0];
            dropObj = J('#lhgdg_drop_' + opt.id, doc)[0];
            btnBarObj = J('#lhgdg_btnBar_' + opt.id, doc)[0];
            bodyObj = J('#lhgdg_content_' + opt.id, doc)[0];

            reContentSize(S.dg);
            iPos(S.dg, opt.top, opt.left, opt.fixed);
            SetDialog(S.dg);

            if (opt.drag)
                initDrag(dragObj);

            if (opt.resize)
                initSize(dropObj);

            if (ie6) {
                var ie6png = J(S.dg).css('ie6png') === 'true' ? true : false;
                if (ie6png) J(S.dg).fixie6png();
            }

            if (opt.html && J.isFunction(opt.dgOnLoad)) opt.dgOnLoad.call(S);

            //if (opt.ele || opt.html) {
            loadObj.style.display = 'none';
            if(inboxObj != undefined || inboxObj != null)
	            inboxObj.style.display = '';

			//李嘉伟 IE6兼容性判断 2011-07-18
			if(!+[1,]){
 	           inboxObj.style.position = 'absolute';
    	       inboxObj.style.top = '0';
        	   inboxObj.style.left = '0';
            }
            if (opt.autoSize) autoSize();
            //}

            if (opt.btnBar && opt.cancelBtn) S.addBtn('dgcancelBtn', '\u53D6\u6D88', opt.onCancel);
        };

        S.reDialogSize = function(width, height) {
            //if(S.dg.offsetWidth>width && S.dg.offsetWidth<=inboxObj.offsetWidth+25)
            //if(S.dg.offsetWidth>=width && inboxObj.clientWidth-inboxObj.scrollWidth<-10)
            //    return;
            J(S.dg).css({
                        'width': width + 'px', 'height': height + 'px'
                    });

            reContentSize(S.dg);

            if (S.dg.offsetWidth - inboxObj.scrollWidth < 25) {
                S.reDialogSize(inboxObj.scrollWidth + 25, S.dg.offsetHeight);
            }
        };

        S.addBtn = function(id, txt, fn, cssClass, cssStyle) {
            if (opt.btnBar) {
                if (J('#lhgdg_' + opt.id + '_' + id, doc)[0])
                    J('#lhgdg_' + opt.id + '_' + id, doc).html(txt).click(fn);
                else {
                    var html = '<div class="lhgdg_button"><button id="lhgdg_' + opt.id + '_' + id + '" ' +
                            (cssClass == undefined ? '' : ('class="' + cssClass + '"')) +
                            (cssStyle == undefined ? '' : ('style="' + cssStyle + '"')) + '>' + txt +
                            '</button></div>',
                            btn = J(html, doc).bind('click', fn)[0];

                    J('#lhgdg_btnBar_' + opt.id, doc).append(btn);
                }
            }
        };

        S.removeBtn = function(id) {
            if (J('#lhgdg_' + opt.id + '_' + id, doc)[0])
                J('#lhgdg_' + opt.id + '_' + id, doc).remove();
        };

        S.removeAllBtn = function() {
            if (opt.btnBar) {
                J('#lhgdg_btnBar_' + opt.id, doc).html("");
            }
        };

        S.SetIndex = function() {
            S.dg.style.zIndex = parseInt(ZIndex, 10) + 1;
            ZIndex = parseInt(S.dg.style.zIndex, 10);

            var ev = getEvent(S.dgWin);

            ev.stopPropagation ? ev.stopPropagation() : (ev.cancelBubble = true);
        };

        S.cancel = function() {


        	/*李嘉伟 2011-09-06 支持juery datePicker
			       遍历DOM的所有带有Wdate hasDatepicker class的input,手动关闭日期选择器
			*/
			try{
			var arr = $(document.body).find(":text[class=Wdate hasDatepicker]");
			$(arr).each(
			function(){
			var name = $(this).attr("id");
			$("#"+name).datepicker('hide');
			}
			);
			}catch(e){
			}

            /**
             * kinz 2011-09-28 增加对话框关闭事件，如果返回false，则不关闭对话框
             */
            if((typeof opt["onclose"] === "function") && opt["onclose"]()==false)
                return;

        	removeDG();

            //kinz 2011-09-30 调整了所有对话框使用同一个遮罩层的问题
            var _cover = J('#lhgdgCover_'+opt.id, doc)[0];
            if (_cover) {
                if (opt.parent && opt.parent.opt.cover) {
                    var Index = opt.parent.dg.style.zIndex;
                    _cover.style.zIndex = parseInt(Index, 10) - 1;
                }
                else
                    _cover.style.display = 'none';
            }

            /*
             var ev = getEvent(S.dgWin);

             if (!ev) return;

             ev.preventDefault ? ev.preventDefault() : (ev.returnValue = false);
             */
        };

        S.cleanDialog = function() {
            if (S.dg)
                removeDG();

            if (cover) {
                J(cover).remove();
                cover = null;
            }
        };

        opt.onCancel = opt.onCancel || S.cancel;
        opt.onXclick = opt.onXclick || S.cancel;

        if (elem)
            J(elem).bind('click', S.ShowDialog);

        J(window).bind('unload', S.cleanDialog);
    };

    J(function() {
        /*
         var lhgDY = setTimeout(function() {
         new J
         ._dialog({ id:'reLoadId', html:'lhgdialog', width:100, title:'reLoad', height:100, left:-9000, btnBar:false })
         .ShowDialog();
         clearTimeout(lhgDY);
         }, 150);
         */
    });

})(jQuery);


var __dialogs = [];
var __counter = 0;
;
(function($) {
    $.dialog = $.dialog || {};

    $.fn.dialog = function(options) {
        options["SetTopWindow"] = window;
        if (typeof options === 'string') {
            if (options == 'close') {
                __dialogs[this.attr("id")].cancel();
            } else if (options == "resize") {
                __dialogs[this.attr("id")].reDialogSize(arguments[1], arguments[2]);
            }
        } else {
            var dlg = __dialogs[this.attr("id")];
            if (dlg == null) {
                options["id"] = this.attr("id");
                options["cover"] = options["modal"] || false;
                //options["html"] = this.html();
                options["ele"] = this[0];
                if (options["width"]) {
                    if (typeof options["width"] === 'string') {
                        var idx = options["width"].indexOf("px");
                        if (idx >= 0) {
                            options["width"] = options["width"].substring(0, idx);
                        }
                    }
                } else {
                    options["autoSize"] = true;
                }
                options["resize"] = options["resizeable"];

                try {
                    dlg = new $._dialog(options);
                } catch(e) {
                    alert(e);
                }

                __dialogs[options["id"]] = dlg;
            }
            dlg.SetTitle(options["title"]);
            dlg.ShowDialog();
            //清空所有的按钮
            dlg.removeAllBtn();
            //加上该有的
            if (options.buttons) {
                //添加按钮
                $.each(options.buttons, function(i, n) {
                    //alert(i,n);
                    var _cssClass = options["buttonClasses"] ? options["buttonClasses"][i] : "";
                    var _cssStyle = options["buttonStyles"] ? options["buttonStyles"][i] : "";
                    dlg.addBtn("btn" + __counter++, i, n, _cssClass, _cssStyle);
                });
            }
        }
    };

})
        (jQuery);